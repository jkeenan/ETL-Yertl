# NAME

ETL::Yertl - ETL with a Shell

# VERSION

version 0.038

# STATUS

<a href="https://travis-ci.org/preaction/ETL-Yertl"><img src="https://travis-ci.org/preaction/ETL-Yertl.svg?branch=master"></a><a href="https://coveralls.io/r/preaction/ETL-Yertl"><img src="https://coveralls.io/repos/preaction/ETL-Yertl/badge.png" alt="Coverage Status" /></a>

# SYNOPSIS

    ### On a shell...
    # Convert file to Yertl's format
    $ yfrom csv file.csv >work.yml
    $ yfrom json file.json >work.yml

    # Mask document
    $ ymask 'field/inner' work.yml >masked.yml

    # Convert file to output format
    $ yto csv work.yml
    $ yto json work.yml

    # Parse HTTP logs into documents
    $ ygrok '%{LOG.HTTP_COMMON}' httpd.log

    # Read data from a database
    $ ysql db_name 'SELECT * FROM employee'

    # Write data to a database
    $ ysql db_name 'INSERT INTO employee ( id, name ) VALUES ( $.id, $.name )'

    ### In Perl...
    use ETL::Yertl;

    # XXX: To do: Perl API

# DESCRIPTION

ETL::Yertl is an ETL ([Extract, Transform,
Load](https://en.wikipedia.org/wiki/Extract,_transform,_load)) for shells. It is
designed to accept data from multiple formats (CSV, JSON), manipulate them
using simple tools, and then convert them to an output format.

Yertl will have tools for:

- Extracting data from databases (MySQL, Postgres, MongoDB)
- Loading data into databases
- Extracting data from web services
- Writing data to web services
- Distributing data through messaging APIs (ZeroMQ)

# SEE ALSO

- [http://preaction.me/yertl](http://preaction.me/yertl)

    The Yertl home page.

## Yertl Tools

- [yfrom](https://metacpan.org/pod/yfrom)

    Convert incoming data (CSV, JSON) to Yertl documents.

- [yto](https://metacpan.org/pod/yto)

    Convert Yertl documents into another format (CSV, JSON).

- [ygrok](https://metacpan.org/pod/ygrok)

    Parse lines of text into Yertl documents.

- [ysql](https://metacpan.org/pod/ysql)

    Read/write documents from SQL databases.

- [ymask](https://metacpan.org/pod/ymask)

    Filter documents with a mask, letting only matching fields through.

- [yq](https://metacpan.org/pod/yq)

    A powerful mini-language for munging and filtering.

## Other Tools

Here are some other tools that can be used with Yertl

- [recs (App::RecordStream)](https://metacpan.org/pod/App::RecordStream)

    A set of tools for manipulating JSON (constrast with Yertl's YAML). For
    interoperability, set the `YERTL_FORMAT` environment variable to
    `"json"`.

- [jq](http://stedolan.github.io/jq/)

    A filter for JSON documents. The inspiration for [yq](https://metacpan.org/pod/yq). For
    interoperability, set the `YERTL_FORMAT` environment variable to
    `"json"`.

- [jt](https://metacpan.org/pod/App::jt)

    JSON Transformer. Allows multiple ways of manipulating JSON, including
    [JSONPath](http://goessner.net/articles/JsonPath/). For interoperability,
    set the `YERTL_FORMAT` environment variable to `"json"`.

# AUTHOR

Doug Bell <preaction@cpan.org>

# CONTRIBUTOR

Luke Triantafyllidis <ltriant@cpan.org>

# COPYRIGHT AND LICENSE

This software is copyright (c) 2016 by Doug Bell.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
